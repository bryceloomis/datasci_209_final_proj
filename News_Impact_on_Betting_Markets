{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6saUvIkF9WfYvcuVAcog8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/bryceloomis/datasci_209_final_proj/blob/main/News_Impact_on_Betting_Markets\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "bGu6zgCcXxz-"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import altair as alt"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Extract the CSV file to a pandas dataframe\n",
        "polymarket_cleaned_daily_df = pd.read_csv(\"/content/polymarket_cleaned_daily.csv\")\n",
        "polymarket_cleaned_daily_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "36MS8VWEX63t",
        "outputId": "1449d618-972c-453a-a929-7fed98a3f2d3"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date            Timestamp  Trump_prob  Harris_prob  Other_prob State  \\\n",
              "0  2024-03-08  2024-03-08 00:00:02       0.555        0.445      0.0050    AZ   \n",
              "1  2024-03-08  2024-03-08 00:00:02       0.500        0.500      0.5000    GA   \n",
              "2  2024-03-08  2024-03-08 00:00:02       0.500        0.500      0.5000    NV   \n",
              "3  2024-03-08  2024-03-08 00:00:02       0.505        0.495      0.0050    PA   \n",
              "4  2024-03-09  2024-03-09 00:00:03       0.555        0.445      0.0055    AZ   \n",
              "\n",
              "   Electoral_Votes  \n",
              "0               11  \n",
              "1               16  \n",
              "2                6  \n",
              "3               19  \n",
              "4               11  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77a6e04b-4fc0-4700-9610-0a23d3ad1dda\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Timestamp</th>\n",
              "      <th>Trump_prob</th>\n",
              "      <th>Harris_prob</th>\n",
              "      <th>Other_prob</th>\n",
              "      <th>State</th>\n",
              "      <th>Electoral_Votes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2024-03-08</td>\n",
              "      <td>2024-03-08 00:00:02</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.445</td>\n",
              "      <td>0.0050</td>\n",
              "      <td>AZ</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2024-03-08</td>\n",
              "      <td>2024-03-08 00:00:02</td>\n",
              "      <td>0.500</td>\n",
              "      <td>0.500</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>GA</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2024-03-08</td>\n",
              "      <td>2024-03-08 00:00:02</td>\n",
              "      <td>0.500</td>\n",
              "      <td>0.500</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>NV</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2024-03-08</td>\n",
              "      <td>2024-03-08 00:00:02</td>\n",
              "      <td>0.505</td>\n",
              "      <td>0.495</td>\n",
              "      <td>0.0050</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2024-03-09</td>\n",
              "      <td>2024-03-09 00:00:03</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.445</td>\n",
              "      <td>0.0055</td>\n",
              "      <td>AZ</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77a6e04b-4fc0-4700-9610-0a23d3ad1dda')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77a6e04b-4fc0-4700-9610-0a23d3ad1dda button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77a6e04b-4fc0-4700-9610-0a23d3ad1dda');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-35ef9a76-f527-47c9-9ecb-b7423aef4961\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35ef9a76-f527-47c9-9ecb-b7423aef4961')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-35ef9a76-f527-47c9-9ecb-b7423aef4961 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "polymarket_cleaned_daily_df",
              "summary": "{\n  \"name\": \"polymarket_cleaned_daily_df\",\n  \"rows\": 11280,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 242,\n        \"samples\": [\n          \"2024-04-01\",\n          \"2024-03-14\",\n          \"2024-08-07\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Timestamp\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 292,\n        \"samples\": [\n          \"2024-05-31 00:00:03\",\n          \"2024-11-04 05:46:02\",\n          \"2024-04-22 00:00:03\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trump_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3971860317767679,\n        \"min\": 0.0045,\n        \"max\": 0.996,\n        \"num_unique_values\": 383,\n        \"samples\": [\n          0.024,\n          0.9435,\n          0.047\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harris_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3990757903349951,\n        \"min\": 0.0015,\n        \"max\": 0.9925,\n        \"num_unique_values\": 455,\n        \"samples\": [\n          0.042,\n          0.105,\n          0.0895\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Other_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.014401609119923853,\n        \"min\": 0.0,\n        \"max\": 0.5,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          0.028,\n          0.005,\n          0.0395\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 50,\n        \"samples\": [\n          \"AR\",\n          \"OR\",\n          \"MS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electoral_Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 3,\n        \"max\": 54,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          11,\n          17,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#We will narrow our focus to Pennsylvania, the state the was most likely to predict the election (according to statisticians)\n",
        "polymarket_cleaned_daily_df = polymarket_cleaned_daily_df[polymarket_cleaned_daily_df['State'] == 'PA']\n",
        "polymarket_cleaned_daily_df['Date'] = pd.to_datetime(polymarket_cleaned_daily_df['Date'])\n",
        "polymarket_cleaned_daily_df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "immPo_dgadTg",
        "outputId": "a61269ab-ff26-4c34-bce3-69b9848b6a8e"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Date            Timestamp  Trump_prob  Harris_prob  Other_prob  \\\n",
              "11067 2024-11-01  2024-11-01 00:00:03       0.595        0.410      0.0005   \n",
              "11117 2024-11-02  2024-11-02 00:00:03       0.555        0.445      0.0005   \n",
              "11167 2024-11-03  2024-11-03 00:00:03       0.485        0.505      0.0005   \n",
              "11217 2024-11-04  2024-11-04 00:00:03       0.555        0.455      0.0005   \n",
              "11245 2024-11-04  2024-11-04 05:41:02       0.555        0.455      0.0005   \n",
              "\n",
              "      State  Electoral_Votes Current_Event  \n",
              "11067    PA               19                \n",
              "11117    PA               19                \n",
              "11167    PA               19                \n",
              "11217    PA               19                \n",
              "11245    PA               19                "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cfcd226a-f257-44d7-8ff9-c9c18b4ae5e9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Timestamp</th>\n",
              "      <th>Trump_prob</th>\n",
              "      <th>Harris_prob</th>\n",
              "      <th>Other_prob</th>\n",
              "      <th>State</th>\n",
              "      <th>Electoral_Votes</th>\n",
              "      <th>Current_Event</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11067</th>\n",
              "      <td>2024-11-01</td>\n",
              "      <td>2024-11-01 00:00:03</td>\n",
              "      <td>0.595</td>\n",
              "      <td>0.410</td>\n",
              "      <td>0.0005</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11117</th>\n",
              "      <td>2024-11-02</td>\n",
              "      <td>2024-11-02 00:00:03</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.445</td>\n",
              "      <td>0.0005</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11167</th>\n",
              "      <td>2024-11-03</td>\n",
              "      <td>2024-11-03 00:00:03</td>\n",
              "      <td>0.485</td>\n",
              "      <td>0.505</td>\n",
              "      <td>0.0005</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11217</th>\n",
              "      <td>2024-11-04</td>\n",
              "      <td>2024-11-04 00:00:03</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.455</td>\n",
              "      <td>0.0005</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11245</th>\n",
              "      <td>2024-11-04</td>\n",
              "      <td>2024-11-04 05:41:02</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.455</td>\n",
              "      <td>0.0005</td>\n",
              "      <td>PA</td>\n",
              "      <td>19</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfcd226a-f257-44d7-8ff9-c9c18b4ae5e9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cfcd226a-f257-44d7-8ff9-c9c18b4ae5e9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cfcd226a-f257-44d7-8ff9-c9c18b4ae5e9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-3f0669cf-d9a7-4290-aec5-b15a2114a450\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f0669cf-d9a7-4290-aec5-b15a2114a450')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-3f0669cf-d9a7-4290-aec5-b15a2114a450 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#The 5 events with the largest impact going into the 2024 Presidential Election\n",
        "#1. Donald Trump Convicted on 34 felonies (May 30, 2024)\n",
        "#2. Assassination attempt on Donald Trump (July 13, 2024)\n",
        "#3. Biden Poor Debate Performance (June 27, 2024)\n",
        "#4. Trump Selects JD Vance as Running Mate (July 15, 2024)\n",
        "#5. Supreme Court Rules on Presidential Immunity (July 1, 2024)\n",
        "\n",
        "#First, we initialize the new \"Current Event\" column as empty strings\n",
        "polymarket_cleaned_daily_df['Current_Event'] = ''\n",
        "\n",
        "polymarket_cleaned_daily_df.loc[polymarket_cleaned_daily_df['Date'] == '2024-05-30', 'Current_Event'] = 'Donald Trump Convicted of 34 felonies'\n",
        "polymarket_cleaned_daily_df.loc[polymarket_cleaned_daily_df['Date'] == '2024-07-13', 'Current_Event'] = 'Assassination attempt on Donald Trump'\n",
        "polymarket_cleaned_daily_df.loc[polymarket_cleaned_daily_df['Date'] == '2024-06-27', 'Current_Event'] = 'Biden Poor Debate Performance'\n",
        "polymarket_cleaned_daily_df.loc[polymarket_cleaned_daily_df['Date'] == '2024-07-15', 'Current_Event'] = 'Trump Selects JD Vance as Running Mate'\n",
        "polymarket_cleaned_daily_df.loc[polymarket_cleaned_daily_df['Date'] == '2024-07-01', 'Current_Event'] = 'Supreme Court Rules on Presidential Immunity'"
      ],
      "metadata": {
        "id": "754aAAZXYKB7"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "felony_df = polymarket_cleaned_daily_df.loc[(polymarket_cleaned_daily_df['Date'] > '2024-05-23') & (polymarket_cleaned_daily_df['Date'] < '2024-06-06')]\n",
        "felony_chart = alt.Chart(felony_df, title = 'Impact of Felonies on Presidential Betting Odds').mark_line().encode(\n",
        "    x = \"Date\",\n",
        "    y = alt.Y(\"Trump_prob\").scale(domain=(0.45, 0.55))\n",
        ")\n",
        "felony_line = alt.Chart(pd.DataFrame({'x':[pd.to_datetime('2024-05-30')]})).mark_rule().encode(\n",
        "    x = 'x'\n",
        ")\n",
        "felony_chart + felony_line"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 385
        },
        "id": "AaDkyTuzlUJ4",
        "outputId": "f5b223c5-e21e-425b-c977-c9cb051b785c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-12dbf390393749479ef99a77da535697.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-12dbf390393749479ef99a77da535697.vega-embed details,\n",
              "  #altair-viz-12dbf390393749479ef99a77da535697.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-12dbf390393749479ef99a77da535697\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-12dbf390393749479ef99a77da535697\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-12dbf390393749479ef99a77da535697\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"layer\": [{\"data\": {\"name\": \"data-78b21dd16191bf04d276953797b5764c\"}, \"mark\": {\"type\": \"line\"}, \"encoding\": {\"x\": {\"field\": \"Date\", \"type\": \"temporal\"}, \"y\": {\"field\": \"Trump_prob\", \"scale\": {\"domain\": [0.45, 0.55]}, \"type\": \"quantitative\"}}, \"title\": \"Impact of Felonies on Presidential Betting Odds\"}, {\"data\": {\"name\": \"data-0bdef6c73705b71d00b851bcf6f99858\"}, \"mark\": {\"type\": \"rule\"}, \"encoding\": {\"x\": {\"field\": \"x\", \"type\": \"temporal\"}}}], \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-78b21dd16191bf04d276953797b5764c\": [{\"Date\": \"2024-05-24T00:00:00\", \"Timestamp\": \"2024-05-24 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.505, \"Other_prob\": 0.012, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-25T00:00:00\", \"Timestamp\": \"2024-05-25 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.505, \"Other_prob\": 0.012, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-26T00:00:00\", \"Timestamp\": \"2024-05-26 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.505, \"Other_prob\": 0.012, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-27T00:00:00\", \"Timestamp\": \"2024-05-27 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.505, \"Other_prob\": 0.012, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-28T00:00:00\", \"Timestamp\": \"2024-05-28 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.5, \"Other_prob\": 0.012, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-29T00:00:00\", \"Timestamp\": \"2024-05-29 00:00:04\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.5, \"Other_prob\": 0.0125, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-05-30T00:00:00\", \"Timestamp\": \"2024-05-30 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.5, \"Other_prob\": 0.013, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"Donald Trump Convicted of 34 felonies\"}, {\"Date\": \"2024-05-31T00:00:00\", \"Timestamp\": \"2024-05-31 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.495, \"Other_prob\": 0.013, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-01T00:00:00\", \"Timestamp\": \"2024-06-01 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.495, \"Other_prob\": 0.013, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-02T00:00:00\", \"Timestamp\": \"2024-06-02 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.495, \"Other_prob\": 0.013, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-03T00:00:00\", \"Timestamp\": \"2024-06-03 00:00:03\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.495, \"Other_prob\": 0.013, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-04T00:00:00\", \"Timestamp\": \"2024-06-04 00:00:02\", \"Trump_prob\": 0.49, \"Harris_prob\": 0.515, \"Other_prob\": 0.01, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-05T00:00:00\", \"Timestamp\": \"2024-06-05 00:00:02\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.52, \"Other_prob\": 0.007, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}], \"data-0bdef6c73705b71d00b851bcf6f99858\": [{\"x\": \"2024-05-30T00:00:00\"}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.LayerChart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "assassination_df = polymarket_cleaned_daily_df.loc[(polymarket_cleaned_daily_df['Date'] > '2024-07-01') & (polymarket_cleaned_daily_df['Date'] < '2024-07-27')]\n",
        "assassination_chart = alt.Chart(assassination_df, title = 'Impact of Assassination Attempt on Presidential Bettings Odds').mark_line().encode(\n",
        "    x = \"Date\",\n",
        "    y = alt.Y(\"Trump_prob\").scale(domain=(0.5, 0.7))\n",
        ")\n",
        "assassination_line = alt.Chart(pd.DataFrame({'x':[pd.to_datetime('2024-07-13')]})).mark_rule().encode(\n",
        "    x = 'x'\n",
        ")\n",
        "assassination_chart + assassination_line"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 385
        },
        "id": "uixFsE_Z9NED",
        "outputId": "4fc0b996-6082-48d2-c500-4da32217f7c4"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-e402f68d34d04ed1bf3c42daef307d1e.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-e402f68d34d04ed1bf3c42daef307d1e.vega-embed details,\n",
              "  #altair-viz-e402f68d34d04ed1bf3c42daef307d1e.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-e402f68d34d04ed1bf3c42daef307d1e\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-e402f68d34d04ed1bf3c42daef307d1e\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-e402f68d34d04ed1bf3c42daef307d1e\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"layer\": [{\"data\": {\"name\": \"data-d67d1a8ae77f3608c46d709223d968c2\"}, \"mark\": {\"type\": \"line\"}, \"encoding\": {\"x\": {\"field\": \"Date\", \"type\": \"temporal\"}, \"y\": {\"field\": \"Trump_prob\", \"scale\": {\"domain\": [0.5, 0.7]}, \"type\": \"quantitative\"}}, \"title\": \"Impact of Assassination Attempt on Presidential Bettings Odds\"}, {\"data\": {\"name\": \"data-10a1f4b635caab08b3359393863b2251\"}, \"mark\": {\"type\": \"rule\"}, \"encoding\": {\"x\": {\"field\": \"x\", \"type\": \"temporal\"}}}], \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-d67d1a8ae77f3608c46d709223d968c2\": [{\"Date\": \"2024-07-02T00:00:00\", \"Timestamp\": \"2024-07-02 00:00:03\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.405, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-03T00:00:00\", \"Timestamp\": \"2024-07-03 00:00:02\", \"Trump_prob\": 0.585, \"Harris_prob\": 0.41, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-04T00:00:00\", \"Timestamp\": \"2024-07-04 00:00:03\", \"Trump_prob\": 0.56, \"Harris_prob\": 0.44, \"Other_prob\": 0.0025, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-05T00:00:00\", \"Timestamp\": \"2024-07-05 00:00:02\", \"Trump_prob\": 0.555, \"Harris_prob\": 0.435, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-06T00:00:00\", \"Timestamp\": \"2024-07-06 00:00:02\", \"Trump_prob\": 0.56, \"Harris_prob\": 0.435, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-07T00:00:00\", \"Timestamp\": \"2024-07-07 00:00:02\", \"Trump_prob\": 0.57, \"Harris_prob\": 0.415, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-08T00:00:00\", \"Timestamp\": \"2024-07-08 00:00:02\", \"Trump_prob\": 0.58, \"Harris_prob\": 0.425, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-09T00:00:00\", \"Timestamp\": \"2024-07-09 00:00:02\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.435, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-10T00:00:00\", \"Timestamp\": \"2024-07-10 00:00:03\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.435, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-11T00:00:00\", \"Timestamp\": \"2024-07-11 00:00:03\", \"Trump_prob\": 0.57, \"Harris_prob\": 0.435, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-12T00:00:00\", \"Timestamp\": \"2024-07-12 00:00:02\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.425, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-13T00:00:00\", \"Timestamp\": \"2024-07-13 00:00:03\", \"Trump_prob\": 0.58, \"Harris_prob\": 0.415, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"Assassination attempt on Donald Trump\"}, {\"Date\": \"2024-07-14T00:00:00\", \"Timestamp\": \"2024-07-14 00:00:02\", \"Trump_prob\": 0.65, \"Harris_prob\": 0.275, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-15T00:00:00\", \"Timestamp\": \"2024-07-15 00:00:03\", \"Trump_prob\": 0.67, \"Harris_prob\": 0.335, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"Trump Selects JD Vance as Running Mate\"}, {\"Date\": \"2024-07-16T00:00:00\", \"Timestamp\": \"2024-07-16 00:00:02\", \"Trump_prob\": 0.61, \"Harris_prob\": 0.335, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-17T00:00:00\", \"Timestamp\": \"2024-07-17 00:00:01\", \"Trump_prob\": 0.64, \"Harris_prob\": 0.34, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-18T00:00:00\", \"Timestamp\": \"2024-07-18 00:00:02\", \"Trump_prob\": 0.655, \"Harris_prob\": 0.345, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-19T00:00:00\", \"Timestamp\": \"2024-07-19 00:00:01\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.425, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-20T00:00:00\", \"Timestamp\": \"2024-07-20 00:00:01\", \"Trump_prob\": 0.59, \"Harris_prob\": 0.43, \"Other_prob\": 0.0055, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-21T00:00:00\", \"Timestamp\": \"2024-07-21 00:00:01\", \"Trump_prob\": 0.56, \"Harris_prob\": 0.415, \"Other_prob\": 0.004, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-22T00:00:00\", \"Timestamp\": \"2024-07-22 00:00:01\", \"Trump_prob\": 0.54, \"Harris_prob\": 0.48, \"Other_prob\": 0.004, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-23T00:00:00\", \"Timestamp\": \"2024-07-23 00:00:01\", \"Trump_prob\": 0.565, \"Harris_prob\": 0.42, \"Other_prob\": 0.0035, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-24T00:00:00\", \"Timestamp\": \"2024-07-24 00:00:01\", \"Trump_prob\": 0.52, \"Harris_prob\": 0.465, \"Other_prob\": 0.0025, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-25T00:00:00\", \"Timestamp\": \"2024-07-25 00:00:01\", \"Trump_prob\": 0.535, \"Harris_prob\": 0.465, \"Other_prob\": 0.0025, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-26T00:00:00\", \"Timestamp\": \"2024-07-26 00:00:02\", \"Trump_prob\": 0.535, \"Harris_prob\": 0.465, \"Other_prob\": 0.0025, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}], \"data-10a1f4b635caab08b3359393863b2251\": [{\"x\": \"2024-07-13T00:00:00\"}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.LayerChart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "debate_df = polymarket_cleaned_daily_df.loc[(polymarket_cleaned_daily_df['Date'] > '2024-06-20') & (polymarket_cleaned_daily_df['Date'] < '2024-07-04')]\n",
        "debate_chart = alt.Chart(debate_df, title = 'Impact of Poor Competitor Debate on Presidential Bettings Odds').mark_line().encode(\n",
        "    x = \"Date\",\n",
        "    y = alt.Y(\"Trump_prob\").scale(domain=(0.3, 0.7))\n",
        ")\n",
        "debate_line = alt.Chart(pd.DataFrame({'x':[pd.to_datetime('2024-06-27')]})).mark_rule().encode(\n",
        "    x = 'x'\n",
        ")\n",
        "debate_chart + debate_line"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 385
        },
        "id": "vTMubKr7Al_j",
        "outputId": "c38963e3-3c5c-408c-9291-4d96c084d12a"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-d59ceef9d7044eac8a73c131ec228bc1.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-d59ceef9d7044eac8a73c131ec228bc1.vega-embed details,\n",
              "  #altair-viz-d59ceef9d7044eac8a73c131ec228bc1.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-d59ceef9d7044eac8a73c131ec228bc1\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-d59ceef9d7044eac8a73c131ec228bc1\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-d59ceef9d7044eac8a73c131ec228bc1\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"layer\": [{\"data\": {\"name\": \"data-050a5aaca02aa137ee423583c31ed55a\"}, \"mark\": {\"type\": \"line\"}, \"encoding\": {\"x\": {\"field\": \"Date\", \"type\": \"temporal\"}, \"y\": {\"field\": \"Trump_prob\", \"scale\": {\"domain\": [0.3, 0.7]}, \"type\": \"quantitative\"}}, \"title\": \"Impact of Poor Competitor Debate on Presidential Bettings Odds\"}, {\"data\": {\"name\": \"data-ad4e11b142a24f1de7eb463a70cf191a\"}, \"mark\": {\"type\": \"rule\"}, \"encoding\": {\"x\": {\"field\": \"x\", \"type\": \"temporal\"}}}], \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-050a5aaca02aa137ee423583c31ed55a\": [{\"Date\": \"2024-06-21T00:00:00\", \"Timestamp\": \"2024-06-21 00:00:03\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.505, \"Other_prob\": 0.0115, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-22T00:00:00\", \"Timestamp\": \"2024-06-22 00:00:02\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.51, \"Other_prob\": 0.0115, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-23T00:00:00\", \"Timestamp\": \"2024-06-23 00:00:03\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.51, \"Other_prob\": 0.0115, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-24T00:00:00\", \"Timestamp\": \"2024-06-24 00:00:03\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.51, \"Other_prob\": 0.0115, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-25T00:00:00\", \"Timestamp\": \"2024-06-25 00:00:03\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.51, \"Other_prob\": 0.0115, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-26T00:00:00\", \"Timestamp\": \"2024-06-26 00:00:03\", \"Trump_prob\": 0.485, \"Harris_prob\": 0.51, \"Other_prob\": 0.011, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-27T00:00:00\", \"Timestamp\": \"2024-06-27 00:00:02\", \"Trump_prob\": 0.495, \"Harris_prob\": 0.505, \"Other_prob\": 0.01, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"Biden Poor Debate Performance\"}, {\"Date\": \"2024-06-28T00:00:00\", \"Timestamp\": \"2024-06-28 00:00:03\", \"Trump_prob\": 0.525, \"Harris_prob\": 0.475, \"Other_prob\": 0.0095, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-29T00:00:00\", \"Timestamp\": \"2024-06-29 00:00:02\", \"Trump_prob\": 0.535, \"Harris_prob\": 0.455, \"Other_prob\": 0.0065, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-06-30T00:00:00\", \"Timestamp\": \"2024-06-30 00:00:02\", \"Trump_prob\": 0.535, \"Harris_prob\": 0.45, \"Other_prob\": 0.0035, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-01T00:00:00\", \"Timestamp\": \"2024-07-01 00:00:02\", \"Trump_prob\": 0.535, \"Harris_prob\": 0.455, \"Other_prob\": 0.0035, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"Supreme Court Rules on Presidential Immunity\"}, {\"Date\": \"2024-07-02T00:00:00\", \"Timestamp\": \"2024-07-02 00:00:03\", \"Trump_prob\": 0.575, \"Harris_prob\": 0.405, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}, {\"Date\": \"2024-07-03T00:00:00\", \"Timestamp\": \"2024-07-03 00:00:02\", \"Trump_prob\": 0.585, \"Harris_prob\": 0.41, \"Other_prob\": 0.006, \"State\": \"PA\", \"Electoral_Votes\": 19, \"Current_Event\": \"\"}], \"data-ad4e11b142a24f1de7eb463a70cf191a\": [{\"x\": \"2024-06-27T00:00:00\"}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.LayerChart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    }
  ]
}